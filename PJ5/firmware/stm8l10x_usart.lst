                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.4.0 #8981 (Sep 26 2015) (Mac OS X x86_64)
                                      4 ; This file was generated Tue Oct 13 14:47:16 2015
                                      5 ;--------------------------------------------------------
                                      6 	.module stm8l10x_usart
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _CLK_GetClockFreq
                                     13 	.globl _USART_DeInit
                                     14 	.globl _USART_Init
                                     15 	.globl _USART_ClockInit
                                     16 	.globl _USART_Cmd
                                     17 	.globl _USART_ITConfig
                                     18 	.globl _USART_ReceiveData8
                                     19 	.globl _USART_ReceiveData9
                                     20 	.globl _USART_ReceiverWakeUpCmd
                                     21 	.globl _USART_SendBreak
                                     22 	.globl _USART_SendData8
                                     23 	.globl _USART_SendData9
                                     24 	.globl _USART_SetAddress
                                     25 	.globl _USART_WakeUpConfig
                                     26 	.globl _USART_GetFlagStatus
                                     27 	.globl _USART_ClearFlag
                                     28 	.globl _USART_GetITStatus
                                     29 	.globl _USART_ClearITPendingBit
                                     30 ;--------------------------------------------------------
                                     31 ; ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DATA
                                     34 ;--------------------------------------------------------
                                     35 ; ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area INITIALIZED
                                     38 ;--------------------------------------------------------
                                     39 ; absolute external ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area DABS (ABS)
                                     42 ;--------------------------------------------------------
                                     43 ; global & static initialisations
                                     44 ;--------------------------------------------------------
                                     45 	.area HOME
                                     46 	.area GSINIT
                                     47 	.area GSFINAL
                                     48 	.area GSINIT
                                     49 ;--------------------------------------------------------
                                     50 ; Home
                                     51 ;--------------------------------------------------------
                                     52 	.area HOME
                                     53 	.area HOME
                                     54 ;--------------------------------------------------------
                                     55 ; code
                                     56 ;--------------------------------------------------------
                                     57 	.area CODE
                                     58 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 59: void USART_DeInit(void)
                                     59 ;	-----------------------------------------
                                     60 ;	 function USART_DeInit
                                     61 ;	-----------------------------------------
      000000                         62 _USART_DeInit:
                                     63 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 63: (void)USART->SR;
      000000 AE 52 30         [ 2]   64 	ldw	x, #0x5230
      000003 F6               [ 1]   65 	ld	a, (x)
                                     66 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 64: (void)USART->DR;
      000004 AE 52 31         [ 2]   67 	ldw	x, #0x5231
      000007 F6               [ 1]   68 	ld	a, (x)
                                     69 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 66: USART->BRR2 = USART_BRR2_RESET_VALUE;  /* Set USART_BRR2 to reset value 0x00 */
      000008 AE 52 33         [ 2]   70 	ldw	x, #0x5233
      00000B 7F               [ 1]   71 	clr	(x)
                                     72 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 67: USART->BRR1 = USART_BRR1_RESET_VALUE;  /* Set USART_BRR1 to reset value 0x00 */
      00000C AE 52 32         [ 2]   73 	ldw	x, #0x5232
      00000F 7F               [ 1]   74 	clr	(x)
                                     75 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 69: USART->CR1 = USART_CR1_RESET_VALUE;  /* Set USART_CR1 to reset value 0x00 */
      000010 AE 52 34         [ 2]   76 	ldw	x, #0x5234
      000013 7F               [ 1]   77 	clr	(x)
                                     78 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 70: USART->CR2 = USART_CR2_RESET_VALUE;  /* Set USART_CR2 to reset value 0x00 */
      000014 AE 52 35         [ 2]   79 	ldw	x, #0x5235
      000017 7F               [ 1]   80 	clr	(x)
                                     81 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 71: USART->CR3 = USART_CR3_RESET_VALUE;  /* Set USART_CR3 to reset value 0x00 */
      000018 AE 52 36         [ 2]   82 	ldw	x, #0x5236
      00001B 7F               [ 1]   83 	clr	(x)
                                     84 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 72: USART->CR4 = USART_CR4_RESET_VALUE;  /* Set USART_CR4 to reset value 0x00 */
      00001C AE 52 37         [ 2]   85 	ldw	x, #0x5237
      00001F 7F               [ 1]   86 	clr	(x)
      000020 81               [ 4]   87 	ret
                                     88 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 100: void USART_Init(uint32_t BaudRate, USART_WordLength_TypeDef USART_WordLength,
                                     89 ;	-----------------------------------------
                                     90 ;	 function USART_Init
                                     91 ;	-----------------------------------------
      000021                         92 _USART_Init:
      000021 52 16            [ 2]   93 	sub	sp, #22
                                     94 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 118: USART->CR1 &= (uint8_t)(~(USART_CR1_PCEN | USART_CR1_PS | USART_CR1_M));
      000023 AE 52 34         [ 2]   95 	ldw	x, #0x5234
      000026 F6               [ 1]   96 	ld	a, (x)
      000027 A4 E9            [ 1]   97 	and	a, #0xe9
      000029 F7               [ 1]   98 	ld	(x), a
                                     99 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 121: USART->CR1 |= (uint8_t)((uint8_t)USART_WordLength | (uint8_t)USART_Parity);
      00002A AE 52 34         [ 2]  100 	ldw	x, #0x5234
      00002D F6               [ 1]  101 	ld	a, (x)
      00002E 6B 16            [ 1]  102 	ld	(0x16, sp), a
      000030 7B 1D            [ 1]  103 	ld	a, (0x1d, sp)
      000032 1A 1F            [ 1]  104 	or	a, (0x1f, sp)
      000034 1A 16            [ 1]  105 	or	a, (0x16, sp)
      000036 AE 52 34         [ 2]  106 	ldw	x, #0x5234
      000039 F7               [ 1]  107 	ld	(x), a
                                    108 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 124: USART->CR3 &= (uint8_t)(~USART_CR3_STOP);
      00003A AE 52 36         [ 2]  109 	ldw	x, #0x5236
      00003D F6               [ 1]  110 	ld	a, (x)
      00003E A4 CF            [ 1]  111 	and	a, #0xcf
      000040 F7               [ 1]  112 	ld	(x), a
                                    113 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 126: USART->CR3 |= (uint8_t)USART_StopBits;
      000041 AE 52 36         [ 2]  114 	ldw	x, #0x5236
      000044 F6               [ 1]  115 	ld	a, (x)
      000045 1A 1E            [ 1]  116 	or	a, (0x1e, sp)
      000047 AE 52 36         [ 2]  117 	ldw	x, #0x5236
      00004A F7               [ 1]  118 	ld	(x), a
                                    119 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 129: USART->BRR1 &= (uint8_t)(~USART_BRR1_DIVM);
      00004B AE 52 32         [ 2]  120 	ldw	x, #0x5232
      00004E F6               [ 1]  121 	ld	a, (x)
      00004F AE 52 32         [ 2]  122 	ldw	x, #0x5232
      000052 7F               [ 1]  123 	clr	(x)
                                    124 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 131: USART->BRR2 &= (uint8_t)(~USART_BRR2_DIVM);
      000053 AE 52 33         [ 2]  125 	ldw	x, #0x5233
      000056 F6               [ 1]  126 	ld	a, (x)
      000057 A4 0F            [ 1]  127 	and	a, #0x0f
      000059 F7               [ 1]  128 	ld	(x), a
                                    129 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 133: USART->BRR2 &= (uint8_t)(~USART_BRR2_DIVF);
      00005A AE 52 33         [ 2]  130 	ldw	x, #0x5233
      00005D F6               [ 1]  131 	ld	a, (x)
      00005E A4 F0            [ 1]  132 	and	a, #0xf0
      000060 F7               [ 1]  133 	ld	(x), a
                                    134 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 135: BaudRate_Mantissa  = ((uint32_t)CLK_GetClockFreq() / BaudRate);
      000061 CDr00r00         [ 4]  135 	call	_CLK_GetClockFreq
      000064 1F 14            [ 2]  136 	ldw	(0x14, sp), x
      000066 1E 1B            [ 2]  137 	ldw	x, (0x1b, sp)
      000068 89               [ 2]  138 	pushw	x
      000069 1E 1B            [ 2]  139 	ldw	x, (0x1b, sp)
      00006B 89               [ 2]  140 	pushw	x
      00006C 1E 18            [ 2]  141 	ldw	x, (0x18, sp)
      00006E 89               [ 2]  142 	pushw	x
      00006F 90 89            [ 2]  143 	pushw	y
      000071 CDr00r00         [ 4]  144 	call	__divulong
      000074 5B 08            [ 2]  145 	addw	sp, #8
      000076 1F 03            [ 2]  146 	ldw	(0x03, sp), x
                                    147 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 137: USART->BRR2 = (uint8_t)((BaudRate_Mantissa >> (uint8_t)8) & (uint8_t)0xF0);
      000078 93               [ 1]  148 	ldw	x, y
      000079 7B 03            [ 1]  149 	ld	a, (0x03, sp)
      00007B 6B 11            [ 1]  150 	ld	(0x11, sp), a
      00007D 0F 0E            [ 1]  151 	clr	(0x0e, sp)
      00007F 7B 11            [ 1]  152 	ld	a, (0x11, sp)
      000081 A4 F0            [ 1]  153 	and	a, #0xf0
      000083 88               [ 1]  154 	push	a
      000084 0F 0D            [ 1]  155 	clr	(0x0d, sp)
      000086 0F 0C            [ 1]  156 	clr	(0x0c, sp)
      000088 0F 0B            [ 1]  157 	clr	(0x0b, sp)
      00008A 84               [ 1]  158 	pop	a
      00008B AE 52 33         [ 2]  159 	ldw	x, #0x5233
      00008E F7               [ 1]  160 	ld	(x), a
                                    161 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 139: USART->BRR2 |= (uint8_t)(BaudRate_Mantissa & (uint8_t)0x0F);
      00008F AE 52 33         [ 2]  162 	ldw	x, #0x5233
      000092 F6               [ 1]  163 	ld	a, (x)
      000093 95               [ 1]  164 	ld	xh, a
      000094 7B 04            [ 1]  165 	ld	a, (0x04, sp)
      000096 A4 0F            [ 1]  166 	and	a, #0x0f
      000098 6B 09            [ 1]  167 	ld	(0x09, sp), a
      00009A 0F 08            [ 1]  168 	clr	(0x08, sp)
      00009C 0F 07            [ 1]  169 	clr	(0x07, sp)
      00009E 4F               [ 1]  170 	clr	a
      00009F 7B 09            [ 1]  171 	ld	a, (0x09, sp)
      0000A1 6B 05            [ 1]  172 	ld	(0x05, sp), a
      0000A3 9E               [ 1]  173 	ld	a, xh
      0000A4 1A 05            [ 1]  174 	or	a, (0x05, sp)
      0000A6 AE 52 33         [ 2]  175 	ldw	x, #0x5233
      0000A9 F7               [ 1]  176 	ld	(x), a
                                    177 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 141: USART->BRR1 = (uint8_t)(BaudRate_Mantissa >> (uint8_t)4);
      0000AA 1E 03            [ 2]  178 	ldw	x, (0x03, sp)
      0000AC A6 04            [ 1]  179 	ld	a, #0x04
      0000AE 4D               [ 1]  180 	tnz	a
      0000AF 27 06            [ 1]  181 	jreq	00104$
      0000B1                        182 00103$:
      0000B1 90 54            [ 2]  183 	srlw	y
      0000B3 56               [ 2]  184 	rrcw	x
      0000B4 4A               [ 1]  185 	dec	a
      0000B5 26 FA            [ 1]  186 	jrne	00103$
      0000B7                        187 00104$:
      0000B7 9F               [ 1]  188 	ld	a, xl
      0000B8 AE 52 32         [ 2]  189 	ldw	x, #0x5232
      0000BB F7               [ 1]  190 	ld	(x), a
                                    191 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 144: USART->CR2 &= (uint8_t)~(USART_CR2_TEN | USART_CR2_REN);
      0000BC AE 52 35         [ 2]  192 	ldw	x, #0x5235
      0000BF F6               [ 1]  193 	ld	a, (x)
      0000C0 A4 F3            [ 1]  194 	and	a, #0xf3
      0000C2 F7               [ 1]  195 	ld	(x), a
                                    196 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 146: USART->CR2 |= (uint8_t)USART_Mode;
      0000C3 AE 52 35         [ 2]  197 	ldw	x, #0x5235
      0000C6 F6               [ 1]  198 	ld	a, (x)
      0000C7 1A 20            [ 1]  199 	or	a, (0x20, sp)
      0000C9 AE 52 35         [ 2]  200 	ldw	x, #0x5235
      0000CC F7               [ 1]  201 	ld	(x), a
      0000CD 5B 16            [ 2]  202 	addw	sp, #22
      0000CF 81               [ 4]  203 	ret
                                    204 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 171: void USART_ClockInit(USART_Clock_TypeDef USART_Clock, USART_CPOL_TypeDef USART_CPOL,
                                    205 ;	-----------------------------------------
                                    206 ;	 function USART_ClockInit
                                    207 ;	-----------------------------------------
      0000D0                        208 _USART_ClockInit:
      0000D0 88               [ 1]  209 	push	a
                                    210 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 181: USART->CR3 &= (uint8_t)~(USART_CR3_CPOL | USART_CR3_CPHA | USART_CR3_LBCL);
      0000D1 AE 52 36         [ 2]  211 	ldw	x, #0x5236
      0000D4 F6               [ 1]  212 	ld	a, (x)
      0000D5 A4 F8            [ 1]  213 	and	a, #0xf8
      0000D7 F7               [ 1]  214 	ld	(x), a
                                    215 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 183: USART->CR3 |= (uint8_t)((uint8_t)USART_CPOL | (uint8_t)USART_CPHA | (uint8_t)USART_LastBit);
      0000D8 AE 52 36         [ 2]  216 	ldw	x, #0x5236
      0000DB F6               [ 1]  217 	ld	a, (x)
      0000DC 6B 01            [ 1]  218 	ld	(0x01, sp), a
      0000DE 7B 05            [ 1]  219 	ld	a, (0x05, sp)
      0000E0 1A 06            [ 1]  220 	or	a, (0x06, sp)
      0000E2 1A 07            [ 1]  221 	or	a, (0x07, sp)
      0000E4 1A 01            [ 1]  222 	or	a, (0x01, sp)
      0000E6 AE 52 36         [ 2]  223 	ldw	x, #0x5236
      0000E9 F7               [ 1]  224 	ld	(x), a
                                    225 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 185: if (USART_Clock != USART_Clock_Disable)
      0000EA 0D 04            [ 1]  226 	tnz	(0x04, sp)
      0000EC 27 09            [ 1]  227 	jreq	00102$
                                    228 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 187: USART->CR3 |= (uint8_t)(USART_CR3_CLKEN); /* Set the Clock Enable bit */
      0000EE AE 52 36         [ 2]  229 	ldw	x, #0x5236
      0000F1 F6               [ 1]  230 	ld	a, (x)
      0000F2 AA 08            [ 1]  231 	or	a, #0x08
      0000F4 F7               [ 1]  232 	ld	(x), a
      0000F5 20 07            [ 2]  233 	jra	00104$
      0000F7                        234 00102$:
                                    235 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 191: USART->CR3 &= (uint8_t)(~USART_CR3_CLKEN); /* Clear the Clock Enable bit */
      0000F7 AE 52 36         [ 2]  236 	ldw	x, #0x5236
      0000FA F6               [ 1]  237 	ld	a, (x)
      0000FB A4 F7            [ 1]  238 	and	a, #0xf7
      0000FD F7               [ 1]  239 	ld	(x), a
      0000FE                        240 00104$:
      0000FE 84               [ 1]  241 	pop	a
      0000FF 81               [ 4]  242 	ret
                                    243 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 201: void USART_Cmd(FunctionalState NewState)
                                    244 ;	-----------------------------------------
                                    245 ;	 function USART_Cmd
                                    246 ;	-----------------------------------------
      000100                        247 _USART_Cmd:
                                    248 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 205: if (NewState != DISABLE)
      000100 0D 03            [ 1]  249 	tnz	(0x03, sp)
      000102 27 09            [ 1]  250 	jreq	00102$
                                    251 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 207: USART->CR1 &= (uint8_t)(~USART_CR1_USARTD); /**< USART Enable */
      000104 AE 52 34         [ 2]  252 	ldw	x, #0x5234
      000107 F6               [ 1]  253 	ld	a, (x)
      000108 A4 DF            [ 1]  254 	and	a, #0xdf
      00010A F7               [ 1]  255 	ld	(x), a
      00010B 20 07            [ 2]  256 	jra	00104$
      00010D                        257 00102$:
                                    258 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 211: USART->CR1 |= USART_CR1_USARTD;  /**< USART Disable */
      00010D AE 52 34         [ 2]  259 	ldw	x, #0x5234
      000110 F6               [ 1]  260 	ld	a, (x)
      000111 AA 20            [ 1]  261 	or	a, #0x20
      000113 F7               [ 1]  262 	ld	(x), a
      000114                        263 00104$:
      000114 81               [ 4]  264 	ret
                                    265 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 229: void USART_ITConfig(USART_IT_TypeDef USART_IT, FunctionalState NewState)
                                    266 ;	-----------------------------------------
                                    267 ;	 function USART_ITConfig
                                    268 ;	-----------------------------------------
      000115                        269 _USART_ITConfig:
      000115 52 04            [ 2]  270 	sub	sp, #4
                                    271 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 236: uartreg = (uint8_t)((uint16_t)USART_IT >> (uint8_t)0x08);
      000117 7B 07            [ 1]  272 	ld	a, (0x07, sp)
      000119 0F 02            [ 1]  273 	clr	(0x02, sp)
      00011B 95               [ 1]  274 	ld	xh, a
                                    275 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 238: itpos = (uint8_t)((uint8_t)1 << (uint8_t)((uint8_t)USART_IT & (uint8_t)0x0F));
      00011C 7B 08            [ 1]  276 	ld	a, (0x08, sp)
      00011E A4 0F            [ 1]  277 	and	a, #0x0f
      000120 97               [ 1]  278 	ld	xl, a
      000121 A6 01            [ 1]  279 	ld	a, #0x01
      000123 6B 01            [ 1]  280 	ld	(0x01, sp), a
      000125 9F               [ 1]  281 	ld	a, xl
      000126 4D               [ 1]  282 	tnz	a
      000127 27 05            [ 1]  283 	jreq	00125$
      000129                        284 00124$:
      000129 08 01            [ 1]  285 	sll	(0x01, sp)
      00012B 4A               [ 1]  286 	dec	a
      00012C 26 FB            [ 1]  287 	jrne	00124$
      00012E                        288 00125$:
                                    289 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 243: if (uartreg == 0x01)
      00012E 9E               [ 1]  290 	ld	a, xh
      00012F A1 01            [ 1]  291 	cp	a, #0x01
      000131 26 04            [ 1]  292 	jrne	00127$
      000133 A6 01            [ 1]  293 	ld	a, #0x01
      000135 20 01            [ 2]  294 	jra	00128$
      000137                        295 00127$:
      000137 4F               [ 1]  296 	clr	a
      000138                        297 00128$:
                                    298 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 240: if (NewState != DISABLE)
      000138 0D 09            [ 1]  299 	tnz	(0x09, sp)
      00013A 27 1B            [ 1]  300 	jreq	00108$
                                    301 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 243: if (uartreg == 0x01)
      00013C 4D               [ 1]  302 	tnz	a
      00013D 27 0C            [ 1]  303 	jreq	00102$
                                    304 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 245: USART->CR1 |= itpos;
      00013F AE 52 34         [ 2]  305 	ldw	x, #0x5234
      000142 F6               [ 1]  306 	ld	a, (x)
      000143 1A 01            [ 1]  307 	or	a, (0x01, sp)
      000145 AE 52 34         [ 2]  308 	ldw	x, #0x5234
      000148 F7               [ 1]  309 	ld	(x), a
      000149 20 2C            [ 2]  310 	jra	00110$
      00014B                        311 00102$:
                                    312 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 250: USART->CR2 |= itpos;
      00014B AE 52 35         [ 2]  313 	ldw	x, #0x5235
      00014E F6               [ 1]  314 	ld	a, (x)
      00014F 1A 01            [ 1]  315 	or	a, (0x01, sp)
      000151 AE 52 35         [ 2]  316 	ldw	x, #0x5235
      000154 F7               [ 1]  317 	ld	(x), a
      000155 20 20            [ 2]  318 	jra	00110$
      000157                        319 00108$:
                                    320 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 258: USART->CR1 &= (uint8_t)(~itpos);
      000157 88               [ 1]  321 	push	a
      000158 7B 02            [ 1]  322 	ld	a, (0x02, sp)
      00015A 43               [ 1]  323 	cpl	a
      00015B 6B 05            [ 1]  324 	ld	(0x05, sp), a
      00015D 84               [ 1]  325 	pop	a
                                    326 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 256: if (uartreg == 0x01)
      00015E 4D               [ 1]  327 	tnz	a
      00015F 27 0C            [ 1]  328 	jreq	00105$
                                    329 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 258: USART->CR1 &= (uint8_t)(~itpos);
      000161 AE 52 34         [ 2]  330 	ldw	x, #0x5234
      000164 F6               [ 1]  331 	ld	a, (x)
      000165 14 04            [ 1]  332 	and	a, (0x04, sp)
      000167 AE 52 34         [ 2]  333 	ldw	x, #0x5234
      00016A F7               [ 1]  334 	ld	(x), a
      00016B 20 0A            [ 2]  335 	jra	00110$
      00016D                        336 00105$:
                                    337 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 263: USART->CR2 &= (uint8_t)(~itpos);
      00016D AE 52 35         [ 2]  338 	ldw	x, #0x5235
      000170 F6               [ 1]  339 	ld	a, (x)
      000171 14 04            [ 1]  340 	and	a, (0x04, sp)
      000173 AE 52 35         [ 2]  341 	ldw	x, #0x5235
      000176 F7               [ 1]  342 	ld	(x), a
      000177                        343 00110$:
      000177 5B 04            [ 2]  344 	addw	sp, #4
      000179 81               [ 4]  345 	ret
                                    346 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 275: uint8_t USART_ReceiveData8(void)
                                    347 ;	-----------------------------------------
                                    348 ;	 function USART_ReceiveData8
                                    349 ;	-----------------------------------------
      00017A                        350 _USART_ReceiveData8:
                                    351 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 277: return USART->DR;
      00017A AE 52 31         [ 2]  352 	ldw	x, #0x5231
      00017D F6               [ 1]  353 	ld	a, (x)
      00017E 81               [ 4]  354 	ret
                                    355 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 287: uint16_t USART_ReceiveData9(void)
                                    356 ;	-----------------------------------------
                                    357 ;	 function USART_ReceiveData9
                                    358 ;	-----------------------------------------
      00017F                        359 _USART_ReceiveData9:
      00017F 52 04            [ 2]  360 	sub	sp, #4
                                    361 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 291: temp = ((uint16_t)(((uint16_t)((uint16_t)USART->CR1 & (uint16_t)USART_CR1_R8)) << 1));
      000181 AE 52 34         [ 2]  362 	ldw	x, #0x5234
      000184 F6               [ 1]  363 	ld	a, (x)
      000185 0F 03            [ 1]  364 	clr	(0x03, sp)
      000187 A4 80            [ 1]  365 	and	a, #0x80
      000189 97               [ 1]  366 	ld	xl, a
      00018A 4F               [ 1]  367 	clr	a
      00018B 95               [ 1]  368 	ld	xh, a
      00018C 58               [ 2]  369 	sllw	x
      00018D 1F 01            [ 2]  370 	ldw	(0x01, sp), x
                                    371 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 292: return (uint16_t)( ((uint16_t)((uint16_t)USART->DR) | temp) & ((uint16_t)0x01FF));
      00018F AE 52 31         [ 2]  372 	ldw	x, #0x5231
      000192 F6               [ 1]  373 	ld	a, (x)
      000193 5F               [ 1]  374 	clrw	x
      000194 97               [ 1]  375 	ld	xl, a
      000195 1A 02            [ 1]  376 	or	a, (0x02, sp)
      000197 97               [ 1]  377 	ld	xl, a
      000198 9E               [ 1]  378 	ld	a, xh
      000199 1A 01            [ 1]  379 	or	a, (0x01, sp)
      00019B A4 01            [ 1]  380 	and	a, #0x01
      00019D 95               [ 1]  381 	ld	xh, a
      00019E 5B 04            [ 2]  382 	addw	sp, #4
      0001A0 81               [ 4]  383 	ret
                                    384 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 301: void USART_ReceiverWakeUpCmd(FunctionalState NewState)
                                    385 ;	-----------------------------------------
                                    386 ;	 function USART_ReceiverWakeUpCmd
                                    387 ;	-----------------------------------------
      0001A1                        388 _USART_ReceiverWakeUpCmd:
                                    389 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 305: if (NewState != DISABLE)
      0001A1 0D 03            [ 1]  390 	tnz	(0x03, sp)
      0001A3 27 09            [ 1]  391 	jreq	00102$
                                    392 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 308: USART->CR2 |= USART_CR2_RWU;
      0001A5 AE 52 35         [ 2]  393 	ldw	x, #0x5235
      0001A8 F6               [ 1]  394 	ld	a, (x)
      0001A9 AA 02            [ 1]  395 	or	a, #0x02
      0001AB F7               [ 1]  396 	ld	(x), a
      0001AC 20 07            [ 2]  397 	jra	00104$
      0001AE                        398 00102$:
                                    399 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 313: USART->CR2 &= ((uint8_t)~USART_CR2_RWU);
      0001AE AE 52 35         [ 2]  400 	ldw	x, #0x5235
      0001B1 F6               [ 1]  401 	ld	a, (x)
      0001B2 A4 FD            [ 1]  402 	and	a, #0xfd
      0001B4 F7               [ 1]  403 	ld	(x), a
      0001B5                        404 00104$:
      0001B5 81               [ 4]  405 	ret
                                    406 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 322: void USART_SendBreak(void)
                                    407 ;	-----------------------------------------
                                    408 ;	 function USART_SendBreak
                                    409 ;	-----------------------------------------
      0001B6                        410 _USART_SendBreak:
                                    411 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 324: USART->CR2 |= USART_CR2_SBK;
      0001B6 72 10 52 35      [ 1]  412 	bset	0x5235, #0
      0001BA 81               [ 4]  413 	ret
                                    414 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 332: void USART_SendData8(uint8_t Data)
                                    415 ;	-----------------------------------------
                                    416 ;	 function USART_SendData8
                                    417 ;	-----------------------------------------
      0001BB                        418 _USART_SendData8:
                                    419 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 335: USART->DR = Data;
      0001BB AE 52 31         [ 2]  420 	ldw	x, #0x5231
      0001BE 7B 03            [ 1]  421 	ld	a, (0x03, sp)
      0001C0 F7               [ 1]  422 	ld	(x), a
      0001C1 81               [ 4]  423 	ret
                                    424 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 344: void USART_SendData9(uint16_t Data)
                                    425 ;	-----------------------------------------
                                    426 ;	 function USART_SendData9
                                    427 ;	-----------------------------------------
      0001C2                        428 _USART_SendData9:
      0001C2 88               [ 1]  429 	push	a
                                    430 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 348: USART->CR1 &= ((uint8_t)~USART_CR1_T8);                    /* Clear the transmit data bit 8     */
      0001C3 AE 52 34         [ 2]  431 	ldw	x, #0x5234
      0001C6 F6               [ 1]  432 	ld	a, (x)
      0001C7 A4 BF            [ 1]  433 	and	a, #0xbf
      0001C9 F7               [ 1]  434 	ld	(x), a
                                    435 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 349: USART->CR1 |= (uint8_t)(((uint8_t)(Data >> 2)) & USART_CR1_T8); /* Write the transmit data bit [8]   */
      0001CA AE 52 34         [ 2]  436 	ldw	x, #0x5234
      0001CD F6               [ 1]  437 	ld	a, (x)
      0001CE 6B 01            [ 1]  438 	ld	(0x01, sp), a
      0001D0 1E 04            [ 2]  439 	ldw	x, (0x04, sp)
      0001D2 54               [ 2]  440 	srlw	x
      0001D3 54               [ 2]  441 	srlw	x
      0001D4 9F               [ 1]  442 	ld	a, xl
      0001D5 A4 40            [ 1]  443 	and	a, #0x40
      0001D7 1A 01            [ 1]  444 	or	a, (0x01, sp)
      0001D9 AE 52 34         [ 2]  445 	ldw	x, #0x5234
      0001DC F7               [ 1]  446 	ld	(x), a
                                    447 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 350: USART->DR   = (uint8_t)(Data);                             /* Write the transmit data bit [0:7] */
      0001DD 7B 05            [ 1]  448 	ld	a, (0x05, sp)
      0001DF AE 52 31         [ 2]  449 	ldw	x, #0x5231
      0001E2 F7               [ 1]  450 	ld	(x), a
      0001E3 84               [ 1]  451 	pop	a
      0001E4 81               [ 4]  452 	ret
                                    453 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 360: void USART_SetAddress(uint8_t Address)
                                    454 ;	-----------------------------------------
                                    455 ;	 function USART_SetAddress
                                    456 ;	-----------------------------------------
      0001E5                        457 _USART_SetAddress:
                                    458 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 366: USART->CR4 &= ((uint8_t)~USART_CR4_ADD);
      0001E5 AE 52 37         [ 2]  459 	ldw	x, #0x5237
      0001E8 F6               [ 1]  460 	ld	a, (x)
      0001E9 A4 F0            [ 1]  461 	and	a, #0xf0
      0001EB F7               [ 1]  462 	ld	(x), a
                                    463 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 368: USART->CR4 |= Address;
      0001EC AE 52 37         [ 2]  464 	ldw	x, #0x5237
      0001EF F6               [ 1]  465 	ld	a, (x)
      0001F0 1A 03            [ 1]  466 	or	a, (0x03, sp)
      0001F2 AE 52 37         [ 2]  467 	ldw	x, #0x5237
      0001F5 F7               [ 1]  468 	ld	(x), a
      0001F6 81               [ 4]  469 	ret
                                    470 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 379: void USART_WakeUpConfig(USART_WakeUp_TypeDef USART_WakeUp)
                                    471 ;	-----------------------------------------
                                    472 ;	 function USART_WakeUpConfig
                                    473 ;	-----------------------------------------
      0001F7                        474 _USART_WakeUpConfig:
                                    475 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 383: USART->CR1 &= ((uint8_t)~USART_CR1_WAKE);
      0001F7 AE 52 34         [ 2]  476 	ldw	x, #0x5234
      0001FA F6               [ 1]  477 	ld	a, (x)
      0001FB A4 F7            [ 1]  478 	and	a, #0xf7
      0001FD F7               [ 1]  479 	ld	(x), a
                                    480 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 384: USART->CR1 |= (uint8_t)USART_WakeUp;
      0001FE AE 52 34         [ 2]  481 	ldw	x, #0x5234
      000201 F6               [ 1]  482 	ld	a, (x)
      000202 1A 03            [ 1]  483 	or	a, (0x03, sp)
      000204 AE 52 34         [ 2]  484 	ldw	x, #0x5234
      000207 F7               [ 1]  485 	ld	(x), a
      000208 81               [ 4]  486 	ret
                                    487 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 400: FlagStatus USART_GetFlagStatus(USART_FLAG_TypeDef USART_FLAG)
                                    488 ;	-----------------------------------------
                                    489 ;	 function USART_GetFlagStatus
                                    490 ;	-----------------------------------------
      000209                        491 _USART_GetFlagStatus:
      000209 88               [ 1]  492 	push	a
                                    493 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 409: if ((USART->CR2 & (uint8_t)USART_FLAG) != (uint8_t)0x00)
      00020A 7B 05            [ 1]  494 	ld	a, (0x05, sp)
      00020C 6B 01            [ 1]  495 	ld	(0x01, sp), a
                                    496 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 407: if (USART_FLAG == USART_FLAG_SBK)
      00020E 1E 04            [ 2]  497 	ldw	x, (0x04, sp)
      000210 A3 01 01         [ 2]  498 	cpw	x, #0x0101
      000213 26 10            [ 1]  499 	jrne	00108$
                                    500 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 409: if ((USART->CR2 & (uint8_t)USART_FLAG) != (uint8_t)0x00)
      000215 AE 52 35         [ 2]  501 	ldw	x, #0x5235
      000218 F6               [ 1]  502 	ld	a, (x)
      000219 14 01            [ 1]  503 	and	a, (0x01, sp)
      00021B 4D               [ 1]  504 	tnz	a
      00021C 27 04            [ 1]  505 	jreq	00102$
                                    506 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 412: status = SET;
      00021E A6 01            [ 1]  507 	ld	a, #0x01
      000220 20 11            [ 2]  508 	jra	00109$
      000222                        509 00102$:
                                    510 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 417: status = RESET;
      000222 4F               [ 1]  511 	clr	a
      000223 20 0E            [ 2]  512 	jra	00109$
      000225                        513 00108$:
                                    514 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 422: if ((USART->SR & (uint8_t)USART_FLAG) != (uint8_t)0x00)
      000225 AE 52 30         [ 2]  515 	ldw	x, #0x5230
      000228 F6               [ 1]  516 	ld	a, (x)
      000229 14 01            [ 1]  517 	and	a, (0x01, sp)
      00022B 4D               [ 1]  518 	tnz	a
      00022C 27 04            [ 1]  519 	jreq	00105$
                                    520 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 425: status = SET;
      00022E A6 01            [ 1]  521 	ld	a, #0x01
      000230 20 01            [ 2]  522 	jra	00109$
      000232                        523 00105$:
                                    524 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 430: status = RESET;
      000232 4F               [ 1]  525 	clr	a
      000233                        526 00109$:
                                    527 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 434: return status;
      000233 5B 01            [ 2]  528 	addw	sp, #1
      000235 81               [ 4]  529 	ret
                                    530 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 454: void USART_ClearFlag(void)
                                    531 ;	-----------------------------------------
                                    532 ;	 function USART_ClearFlag
                                    533 ;	-----------------------------------------
      000236                        534 _USART_ClearFlag:
                                    535 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 457: USART->SR = (uint8_t)~(USART_SR_RXNE);
      000236 AE 52 30         [ 2]  536 	ldw	x, #0x5230
      000239 A6 DF            [ 1]  537 	ld	a, #0xdf
      00023B F7               [ 1]  538 	ld	(x), a
      00023C 81               [ 4]  539 	ret
                                    540 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 472: ITStatus USART_GetITStatus(USART_IT_TypeDef USART_IT)
                                    541 ;	-----------------------------------------
                                    542 ;	 function USART_GetITStatus
                                    543 ;	-----------------------------------------
      00023D                        544 _USART_GetITStatus:
      00023D 52 04            [ 2]  545 	sub	sp, #4
                                    546 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 484: itpos = (uint8_t)((uint8_t)1 << (uint8_t)((uint8_t)USART_IT & (uint8_t)0x0F));
      00023F 7B 08            [ 1]  547 	ld	a, (0x08, sp)
      000241 95               [ 1]  548 	ld	xh, a
      000242 A4 0F            [ 1]  549 	and	a, #0x0f
      000244 97               [ 1]  550 	ld	xl, a
      000245 A6 01            [ 1]  551 	ld	a, #0x01
      000247 6B 03            [ 1]  552 	ld	(0x03, sp), a
      000249 9F               [ 1]  553 	ld	a, xl
      00024A 4D               [ 1]  554 	tnz	a
      00024B 27 05            [ 1]  555 	jreq	00135$
      00024D                        556 00134$:
      00024D 08 03            [ 1]  557 	sll	(0x03, sp)
      00024F 4A               [ 1]  558 	dec	a
      000250 26 FB            [ 1]  559 	jrne	00134$
      000252                        560 00135$:
                                    561 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 486: itmask1 = (uint8_t)((uint8_t)USART_IT >> (uint8_t)4);
      000252 02               [ 1]  562 	rlwa	x
      000253 4E               [ 1]  563 	swap	a
      000254 A4 0F            [ 1]  564 	and	a, #0x0f
      000256 01               [ 1]  565 	rrwa	x
                                    566 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 488: itmask2 = (uint8_t)((uint8_t)1 << itmask1);
      000257 A6 01            [ 1]  567 	ld	a, #0x01
      000259 6B 02            [ 1]  568 	ld	(0x02, sp), a
      00025B 9E               [ 1]  569 	ld	a, xh
      00025C 4D               [ 1]  570 	tnz	a
      00025D 27 05            [ 1]  571 	jreq	00137$
      00025F                        572 00136$:
      00025F 08 02            [ 1]  573 	sll	(0x02, sp)
      000261 4A               [ 1]  574 	dec	a
      000262 26 FB            [ 1]  575 	jrne	00136$
      000264                        576 00137$:
                                    577 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 492: if (USART_IT == USART_IT_PE)
      000264 1E 07            [ 2]  578 	ldw	x, (0x07, sp)
      000266 A3 01 00         [ 2]  579 	cpw	x, #0x0100
      000269 26 1C            [ 1]  580 	jrne	00110$
                                    581 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 495: enablestatus = (uint8_t)((uint8_t)USART->CR1 & itmask2);
      00026B AE 52 34         [ 2]  582 	ldw	x, #0x5234
      00026E F6               [ 1]  583 	ld	a, (x)
      00026F 14 02            [ 1]  584 	and	a, (0x02, sp)
      000271 6B 04            [ 1]  585 	ld	(0x04, sp), a
                                    586 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 498: if (((USART->SR & itpos) != (uint8_t)0x00) && enablestatus)
      000273 AE 52 30         [ 2]  587 	ldw	x, #0x5230
      000276 F6               [ 1]  588 	ld	a, (x)
      000277 14 03            [ 1]  589 	and	a, (0x03, sp)
      000279 4D               [ 1]  590 	tnz	a
      00027A 27 08            [ 1]  591 	jreq	00102$
      00027C 0D 04            [ 1]  592 	tnz	(0x04, sp)
      00027E 27 04            [ 1]  593 	jreq	00102$
                                    594 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 501: pendingbitstatus = SET;
      000280 A6 01            [ 1]  595 	ld	a, #0x01
      000282 20 1D            [ 2]  596 	jra	00111$
      000284                        597 00102$:
                                    598 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 506: pendingbitstatus = RESET;
      000284 4F               [ 1]  599 	clr	a
      000285 20 1A            [ 2]  600 	jra	00111$
      000287                        601 00110$:
                                    602 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 512: enablestatus = (uint8_t)((uint8_t)USART->CR2 & itmask2);
      000287 AE 52 35         [ 2]  603 	ldw	x, #0x5235
      00028A F6               [ 1]  604 	ld	a, (x)
      00028B 14 02            [ 1]  605 	and	a, (0x02, sp)
      00028D 6B 01            [ 1]  606 	ld	(0x01, sp), a
                                    607 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 514: if (((USART->SR & itpos) != (uint8_t)0x00) && enablestatus)
      00028F AE 52 30         [ 2]  608 	ldw	x, #0x5230
      000292 F6               [ 1]  609 	ld	a, (x)
      000293 14 03            [ 1]  610 	and	a, (0x03, sp)
      000295 4D               [ 1]  611 	tnz	a
      000296 27 08            [ 1]  612 	jreq	00106$
      000298 0D 01            [ 1]  613 	tnz	(0x01, sp)
      00029A 27 04            [ 1]  614 	jreq	00106$
                                    615 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 517: pendingbitstatus = SET;
      00029C A6 01            [ 1]  616 	ld	a, #0x01
      00029E 20 01            [ 2]  617 	jra	00111$
      0002A0                        618 00106$:
                                    619 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 522: pendingbitstatus = RESET;
      0002A0 4F               [ 1]  620 	clr	a
      0002A1                        621 00111$:
                                    622 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 527: return  pendingbitstatus;
      0002A1 5B 04            [ 2]  623 	addw	sp, #4
      0002A3 81               [ 4]  624 	ret
                                    625 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 546: void USART_ClearITPendingBit(void)
                                    626 ;	-----------------------------------------
                                    627 ;	 function USART_ClearITPendingBit
                                    628 ;	-----------------------------------------
      0002A4                        629 _USART_ClearITPendingBit:
                                    630 ;	lib/STM8L10x_StdPeriph_Driver/src/stm8l10x_usart.c: 549: USART->SR = (uint8_t)~(USART_SR_RXNE);
      0002A4 AE 52 30         [ 2]  631 	ldw	x, #0x5230
      0002A7 A6 DF            [ 1]  632 	ld	a, #0xdf
      0002A9 F7               [ 1]  633 	ld	(x), a
      0002AA 81               [ 4]  634 	ret
                                    635 	.area CODE
                                    636 	.area INITIALIZER
                                    637 	.area CABS (ABS)
